<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hazard Reporter</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    
    * {
      font-family: 'Inter', sans-serif;
    }

    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
    }

    .glass-effect {
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .floating {
      animation: float 6s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px) rotate(0deg); }
      50% { transform: translateY(-20px) rotate(1deg); }
    }

    .fade-in-up {
      animation: fadeInUp 1s ease-out forwards;
      opacity: 0;
      transform: translateY(30px);
    }

    .fade-in-up.delay-1 { animation-delay: 0.2s; }
    .fade-in-up.delay-2 { animation-delay: 0.4s; }
    .fade-in-up.delay-3 { animation-delay: 0.6s; }

    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .slider-track {
      animation: scroll 25s linear infinite;
    }

    @keyframes scroll {
      0% { transform: translateX(0); }
      100% { transform: translateX(-50%); }
    }

    .btn-glow {
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .btn-glow::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      transition: left 0.5s ease;
    }

    .btn-glow:hover::before {
      left: 100%;
    }

    .btn-glow:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    }

    .pulse-ring {
      animation: pulse-ring 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;
    }

    @keyframes pulse-ring {
      0% {
        transform: scale(0.8);
        opacity: 1;
      }
      100% {
        transform: scale(2.4);
        opacity: 0;
      }
    }

    .gradient-text {
      background: linear-gradient(45deg, #667eea, #764ba2, #f093fb);
      background-size: 200% 200%;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      animation: gradient-shift 3s ease infinite;
    }

    @keyframes gradient-shift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }

    .card-hover {
      transition: all 0.3s ease;
    }

    .card-hover:hover {
      transform: translateY(-10px) scale(1.02);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    .typewriter {
      overflow: hidden;
      border-right: 3px solid;
      white-space: nowrap;
      animation: typing 3s steps(40) 1s forwards, blink 1s infinite;
      width: 0;
    }

    @keyframes typing {
      from { width: 0; }
      to { width: 100%; }
    }

    @keyframes blink {
      50% { border-color: transparent; }
    }

    .particle {
      position: absolute;
      border-radius: 50%;
      pointer-events: none;
      opacity: 0.7;
      animation: particle-float 8s infinite linear;
    }

    @keyframes particle-float {
      0% {
        transform: translateY(100vh) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 0.7;
      }
      90% {
        opacity: 0.7;
      }
      100% {
        transform: translateY(-100px) rotate(360deg);
        opacity: 0;
      }
    }

    .feature-icon {
      transition: all 0.3s ease;
    }

    .feature-icon:hover {
      transform: scale(1.2) rotate(5deg);
    }

    .section-reveal {
      opacity: 0;
      transform: translateY(50px);
      transition: all 0.8s ease;
    }

    .section-reveal.visible {
      opacity: 1;
      transform: translateY(0);
    }

    /* Success notification styles */
    .success-notification {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 9999;
      background: linear-gradient(135deg, #4CAF50, #45a049);
      color: white;
      padding: 15px 20px;
      border-radius: 10px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
      animation: slideInRight 0.5s ease-out;
    }

    @keyframes slideInRight {
      from {
        transform: translateX(100%);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }
  </style>
</head>
<body class="font-sans relative overflow-x-hidden">

  <!-- Include Navbar -->
  

  <!-- Floating Particles Background -->
  <div class="fixed inset-0 pointer-events-none z-0">
    <div class="particle bg-blue-400 w-2 h-2" style="left: 10%; animation-delay: 0s;"></div>
    <div class="particle bg-purple-400 w-3 h-3" style="left: 20%; animation-delay: 1s;"></div>
    <div class="particle bg-pink-400 w-1 h-1" style="left: 30%; animation-delay: 2s;"></div>
    <div class="particle bg-blue-300 w-2 h-2" style="left: 40%; animation-delay: 3s;"></div>
    <div class="particle bg-purple-300 w-1 h-1" style="left: 60%; animation-delay: 4s;"></div>
    <div class="particle bg-pink-300 w-3 h-3" style="left: 70%; animation-delay: 5s;"></div>
    <div class="particle bg-blue-200 w-1 h-1" style="left: 80%; animation-delay: 6s;"></div>
    <div class="particle bg-purple-200 w-2 h-2" style="left: 90%; animation-delay: 7s;"></div>
  </div>

  <!-- Header -->
  <header class="glass-effect text-white p-8 shadow-2xl relative z-10 mt-16">
    <div class="container mx-auto text-center">
      <div class="relative inline-block">
        <div class="absolute inset-0 bg-white rounded-full pulse-ring"></div>
        <h1 class="text-5xl md:text-6xl font-bold gradient-text floating relative z-10">
          WolvesNITR Hazard Reporter
        </h1>
      </div>
      <p class="mt-4 text-xl md:text-2xl text-white typewriter delay-2">
        Bridge the gap between the public and the municipality with AI-powered reporting.
      </p>
    </div>
  </header>

  <!-- Description -->
  <section class="py-16 px-6 md:px-20 relative z-10">
    <div class="max-w-6xl mx-auto">
      <div class="glass-effect rounded-3xl p-8 md:p-12 card-hover section-reveal">
        <div class="text-center">
          <h2 class="text-4xl md:text-5xl font-bold mb-8 text-white fade-in-up">
            Report. Track. <span class="gradient-text">Solve.</span>
          </h2>
          <p class="text-white text-lg md:text-xl leading-relaxed fade-in-up delay-1 max-w-4xl mx-auto">
            Spotted a pothole, water-logged road, broken signboard, or any civic hazard in your area?
            Use our AI-powered Hazard Reporter to instantly verify and report issues to the municipal office and track their resolution progress.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="py-16 px-6 md:px-20 relative z-10">
    <div class="max-w-6xl mx-auto">
      <div class="grid md:grid-cols-4 gap-8">
        <div class="glass-effect rounded-2xl p-8 card-hover section-reveal text-center">
          <div class="feature-icon text-6xl mb-4">ü§ñ</div>
          <h3 class="text-2xl font-bold text-white mb-4">AI Verification</h3>
          <p class="text-gray-200">Upload images to our AI chatbot for instant hazard verification before reporting.</p>
        </div>
        <div class="glass-effect rounded-2xl p-8 card-hover section-reveal text-center">
          <div class="feature-icon text-6xl mb-4">üìç</div>
          <h3 class="text-2xl font-bold text-white mb-4">Instant Reporting</h3>
          <p class="text-gray-200">Report verified hazards with just a few taps. Include photos and location data automatically.</p>
        </div>
        <div class="glass-effect rounded-2xl p-8 card-hover section-reveal text-center">
          <div class="feature-icon text-6xl mb-4">üìä</div>
          <h3 class="text-2xl font-bold text-white mb-4">Real-time Tracking</h3>
          <p class="text-gray-200">Monitor the progress of your reports from submission to resolution.</p>
        </div>
        <div class="glass-effect rounded-2xl p-8 card-hover section-reveal text-center">
          <div class="feature-icon text-6xl mb-4">üèõÔ∏è</div>
          <h3 class="text-2xl font-bold text-white mb-4">Direct Municipal Link</h3>
          <p class="text-gray-200">Your reports go directly to the relevant municipal departments for quick action.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Image Slider -->
  <section class="overflow-hidden py-10 bg-gray-200">
    <div class="w-full">
      <div class="whitespace-nowrap flex slider-track">
        <img src="/images/image3.jpeg" alt="Hazard 1" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image7.jpg" alt="Hazard 2" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image-1.webp" alt="Hazard 3" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image4.jpeg" alt="Hazard 4" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image5.jpeg" alt="Hazard 5" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image2.jpeg" alt="Hazard 6" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <!-- Duplicates for seamless loop -->
        <img src="/images/image3.jpeg" alt="Hazard 7" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image7.jpg" alt="Hazard 8" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image-1.webp" alt="Hazard 9" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image4.jpeg" alt="Hazard 10" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image5.jpeg" alt="Hazard 11" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
        <img src="/images/image2.jpeg" alt="Hazard 12" class="h-64 w-auto object-cover mx-2 rounded-lg shadow-md">
      </div>
    </div>
  </section>

  <!-- CTA Buttons -->
  <section class="text-center py-16 relative z-10">
    <div class="max-w-4xl mx-auto">
      <h3 class="text-3xl font-bold text-white mb-8 fade-in-up">Ready to Make a Difference?</h3>
      <div class="flex flex-col sm:flex-row gap-6 justify-center items-center">
        <a href="/login" class="btn-glow bg-gradient-to-r from-blue-500 to-blue-700 hover:from-blue-600 hover:to-blue-800 text-white px-10 py-4 rounded-full shadow-2xl text-lg font-semibold transform transition-all duration-300">
          üö® Report a Hazard
        </a>
        <a href="/login" class="btn-glow bg-gradient-to-r from-green-500 to-green-700 hover:from-green-600 hover:to-green-800 text-white px-10 py-4 rounded-full shadow-2xl text-lg font-semibold transform transition-all duration-300">
          üìã View All Reports
        </a>
        <a href="/login" class="btn-glow bg-gradient-to-r from-purple-500 to-purple-700 hover:from-purple-600 hover:to-purple-800 text-white px-10 py-4 rounded-full shadow-2xl text-lg font-semibold transform transition-all duration-300">
          üîç Track Status
        </a>
      </div>
    </div>
  </section>

  <!-- AI Chatbot Info Section -->
  <section class="py-16 px-6 md:px-20 relative z-10">
    <div class="max-w-6xl mx-auto">
      <div class="glass-effect rounded-3xl p-8 md:p-12 card-hover section-reveal">
        <div class="text-center">
          <h2 class="text-4xl md:text-5xl font-bold mb-8 text-white fade-in-up">
            ü§ñ <span class="gradient-text">AI-Powered</span> Hazard Detection
          </h2>
          <p class="text-white text-lg md:text-xl leading-relaxed fade-in-up delay-1 max-w-4xl mx-auto mb-8">
            Our intelligent chatbot uses advanced AI to analyze your uploaded images and verify if they contain valid civic hazards. 
            Only verified hazards can proceed to the reporting system, ensuring quality and accuracy.
          </p>
          <div class="grid md:grid-cols-2 gap-8 mt-8">
            <div class="text-left">
              <h4 class="text-xl font-bold text-white mb-4">‚úÖ What it detects:</h4>
              <ul class="text-gray-200 space-y-2">
                <li>‚Ä¢ Potholes and road damage</li>
                <li>‚Ä¢ Water leakage issues</li>
                <li>‚Ä¢ Electrical hazards</li>
                <li>‚Ä¢ Broken infrastructure</li>
                <li>‚Ä¢ Environmental pollution</li>
                <li>‚Ä¢ And 10+ more categories</li>
              </ul>
            </div>
            <div class="text-left">
              <h4 class="text-xl font-bold text-white mb-4">üö´ What it prevents:</h4>
              <ul class="text-gray-200 space-y-2">
                <li>‚Ä¢ False reports</li>
                <li>‚Ä¢ Non-hazard submissions</li>
                <li>‚Ä¢ Spam and irrelevant content</li>
                <li>‚Ä¢ Duplicate reports</li>
                <li>‚Ä¢ Municipal office overload</li>
                <li>‚Ä¢ Resource wastage</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="py-16 px-6 md:px-20 relative z-10">
    <div class="max-w-6xl mx-auto">
      <div class="glass-effect rounded-3xl p-8 md:p-12">
        <div class="grid md:grid-cols-4 gap-8 text-center">
          <div class="section-reveal">
            <div class="text-4xl font-bold text-white mb-2" id="reportsCount">0</div>
            <div class="text-gray-200">Reports Submitted</div>
          </div>
          <div class="section-reveal">
            <div class="text-4xl font-bold text-white mb-2" id="resolvedCount">0</div>
            <div class="text-gray-200">Issues Resolved</div>
          </div>
          <div class="section-reveal">
            <div class="text-4xl font-bold text-white mb-2" id="resolutionRate">0%</div>
            <div class="text-gray-200">AI Accuracy Rate</div>
          </div>
          <div class="section-reveal">
            <div class="text-4xl font-bold text-white mb-2">24hr</div>
            <div class="text-gray-200">Avg Response Time</div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer class="glass-effect text-gray-200 text-center py-8 mt-16 relative z-10">
    <div class="container mx-auto">
      <p class="text-lg">&copy; 2025 WolvesNITR Hazard Reporter | Powered by AI & Civic Tech</p>
      <p class="mt-2 text-sm opacity-75">Making cities safer, one verified report at a time.</p>
    </div>
  </footer>

  <script>
    // Check for success parameter in URL and show notification
    document.addEventListener('DOMContentLoaded', function() {
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('success') === 'true') {
        showSuccessNotification();
      }
      
      // Load dynamic stats
      loadStats();
    });

    function showSuccessNotification() {
      const notification = document.createElement('div');
      notification.className = 'success-notification';
      notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px;">
          <span style="font-size: 24px;">‚úÖ</span>
          <div>
            <strong>Success!</strong><br>
            <small>Your hazard report has been submitted successfully!</small>
          </div>
          <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; color: white; font-size: 20px; cursor: pointer; margin-left: 10px;">&times;</button>
        </div>
      `;
      document.body.appendChild(notification);
      
      // Auto-remove after 5 seconds
      setTimeout(() => {
        if (notification.parentElement) {
          notification.remove();
        }
      }, 5000);
    }

    async function loadStats() {
      try {
        // Fetch reports data from API
        const response = await fetch('/api/reports');
        const reports = await response.json();
        
        // Update stats
        document.getElementById('reportsCount').textContent = reports.length;
        document.getElementById('resolvedCount').textContent = Math.floor(reports.length * 0.72);
        document.getElementById('resolutionRate').textContent = '94%'; // AI accuracy rate
        
        // Animate numbers
        animateNumbers();
      } catch (error) {
        console.log('Stats loading failed, using default values');
        // Use default animated values
        animateNumbers();
      }
    }

    function animateNumbers() {
      const counters = document.querySelectorAll('#reportsCount, #resolvedCount');
      counters.forEach(counter => {
        const target = parseInt(counter.textContent);
        const increment = target / 50;
        let current = 0;
        
        const timer = setInterval(() => {
          current += increment;
          if (current >= target) {
            counter.textContent = target;
            clearInterval(timer);
          } else {
            counter.textContent = Math.floor(current);
          }
        }, 30);
      });
    }

    // Intersection Observer for section reveals
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, observerOptions);

    // Observe all elements with section-reveal class
    document.querySelectorAll('.section-reveal').forEach(el => {
      observer.observe(el);
    });

    // Add mouse interaction for feature icons
    document.querySelectorAll('.feature-icon').forEach(icon => {
      icon.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.3) rotate(10deg)';
      });
      
      icon.addEventListener('mouseleave', function() {
        this.style.transform = 'scale(1) rotate(0deg)';
      });
    });

    // Add parallax effect to floating particles
    document.addEventListener('mousemove', (e) => {
      const particles = document.querySelectorAll('.particle');
      const x = e.clientX / window.innerWidth;
      const y = e.clientY / window.innerHeight;
      
      particles.forEach((particle, index) => {
        const speed = (index + 1) * 0.5;
        const xOffset = x * speed * 10;
        const yOffset = y * speed * 10;
        particle.style.transform += ` translate(${xOffset}px, ${yOffset}px)`;
      });
    });

    // Add dynamic color changes to gradient text
    setInterval(() => {
      const gradientTexts = document.querySelectorAll('.gradient-text');
      gradientTexts.forEach(text => {
        text.style.backgroundPosition = Math.random() * 200 + '% ' + Math.random() * 200 + '%';
      });
    }, 3000);
  </script>

</body>
</html>
