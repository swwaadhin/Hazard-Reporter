<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hazard Comments</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      --success-gradient: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);
      --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      --hover-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    body {
      background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
      min-height: 100vh;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .close-btn {
      position: fixed;
      top: 20px;
      right: 20px;
      width: 50px;
      height: 50px;
      background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
      border: none;
      border-radius: 50%;
      color: white;
      font-size: 1.2rem;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
      z-index: 1000;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .close-btn:hover {
      transform: scale(1.1);
      box-shadow: 0 8px 25px rgba(255, 107, 107, 0.6);
    }

    .close-btn:active {
      transform: scale(0.95);
    }

    .hazard-header {
      background: white;
      border-radius: 1.5rem;
      box-shadow: var(--card-shadow);
      overflow: hidden;
      margin-bottom: 2rem;
      border: none;
      position: relative;
    }

    .hazard-image {
      height: 300px;
      object-fit: cover;
      width: 100%;
      position: relative;
    }

    .image-overlay {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background: linear-gradient(transparent, rgba(0,0,0,0.7));
      color: white;
      padding: 2rem;
    }

    .hazard-title {
      color: #2c3e50;
      font-weight: 700;
      font-size: 2rem;
      margin-bottom: 0.5rem;
    }

    .section-title {
      color: #2c3e50;
      font-weight: 600;
      font-size: 1.2rem;
      margin-bottom: 1rem;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .hazard-description {
      color: #5a6c7d;
      line-height: 1.8;
      font-size: 1.1rem;
      margin-bottom: 0;
    }

    .comments-container {
      background: white;
      border-radius: 1.5rem;
      box-shadow: var(--card-shadow);
      padding: 2rem;
      border: none;
    }

    .comments-header {
      display: flex;
      align-items: center;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid #f8f9fa;
    }

    .comments-icon {
      background: var(--primary-gradient);
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.2rem;
      margin-right: 1rem;
    }

    .comments-title {
      color: #2c3e50;
      font-weight: 700;
      font-size: 1.5rem;
      margin: 0;
    }

    .comment-item {
      background: #f8f9fa;
      border: none;
      border-radius: 1rem;
      padding: 1.5rem;
      margin-bottom: 1rem;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .comment-item::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 4px;
      background: var(--primary-gradient);
    }

    .comment-item:hover {
      transform: translateX(5px);
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }

    .comment-author {
      display: flex;
      align-items: center;
      margin-bottom: 0.75rem;
    }

    .author-avatar {
      width: 40px;
      height: 40px;
      background: var(--success-gradient);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: 600;
      margin-right: 0.75rem;
      font-size: 0.9rem;
    }

    .author-name {
      font-weight: 600;
      color: #2c3e50;
      margin: 0;
    }

    .comment-text {
      color: #4a5568;
      line-height: 1.6;
      margin-bottom: 0.75rem;
      font-size: 1rem;
    }

    .comment-date {
      color: #718096;
      font-size: 0.85rem;
    }

    .empty-state {
      text-align: center;
      padding: 3rem 1rem;
      color: #718096;
    }

    .empty-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
      opacity: 0.5;
    }

    .comment-form {
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      border-radius: 1rem;
      padding: 1.5rem;
      margin-top: 2rem;
    }

    .form-label {
      color: #2c3e50;
      font-weight: 600;
      margin-bottom: 0.75rem;
    }

    .form-control {
      border: 2px solid #e2e8f0;
      border-radius: 0.75rem;
      padding: 0.75rem 1rem;
      transition: all 0.3s ease;
      background: white;
    }

    .form-control:focus {
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      transform: translateY(-1px);
    }

    .submit-btn {
      background: var(--primary-gradient);
      border: none;
      padding: 0.75rem 2rem;
      border-radius: 2rem;
      color: white;
      font-weight: 600;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .submit-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
      color: white;
    }

    .fade-in {
      animation: fadeIn 0.6s ease-out forwards;
      opacity: 0;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .stagger-1 { animation-delay: 0.1s; }
    .stagger-2 { animation-delay: 0.2s; }
    .stagger-3 { animation-delay: 0.3s; }

    @media (max-width: 768px) {
      .hazard-title {
        font-size: 1.5rem;
      }
      
      .comments-container {
        padding: 1.5rem;
      }
      
      .close-btn {
        top: 15px;
        right: 15px;
        width: 45px;
        height: 45px;
      }
    }
  </style>
</head>
<body>
  <!-- Close Button -->
  <button class="close-btn" onclick="closePage()" title="Close">
    <i class="fas fa-times"></i>
  </button>

  <div class="container mt-5 pb-5">
    <!-- Hazard Header -->
    <div class="hazard-header fade-in stagger-1">
      <div class="position-relative">
        <img src="/uploads/<%= hazard.image %>" class="hazard-image" alt="Hazard Image">
        <div class="image-overlay">
          <h1 class="hazard-title text-white mb-0"><%= hazard.title %></h1>
        </div>
      </div>
      <div class="p-4">
        <h5 class="section-title">
          <i class="fas fa-info-circle me-2"></i>
          Description
        </h5>
        <p class="hazard-description"><%= hazard.description || 'No description provided.' %></p>
      </div>
    </div>

    <!-- Comments Section -->
    <div class="comments-container fade-in stagger-2">
      <div class="comments-header">
        <div class="comments-icon">
          <i class="fas fa-comments"></i>
        </div>
        <div>
          <h2 class="comments-title">Discussion</h2>
          <small class="text-muted">
            <%= hazard.comments.length %> comment<%= hazard.comments.length !== 1 ? 's' : '' %>
          </small>
        </div>
      </div>

      <% if (hazard.comments.length === 0) { %>
        <div class="empty-state">
          <div class="empty-icon">
            <i class="fas fa-comment-slash"></i>
          </div>
          <h4>No comments yet</h4>
          <p>Be the first to share your thoughts about this hazard!</p>
        </div>
      <% } else { %>
        <div class="comments-list">
          <% hazard.comments.forEach((comment, index) => { %>
            <div class="comment-item fade-in stagger-<%= (index % 3) + 1 %>">
              <div class="comment-author">
                <div class="author-avatar">
                  <%= (comment.commenter?.fullname || "Anonymous").charAt(0).toUpperCase() %>
                </div>
                <div>
                  <div class="author-name"><%= comment.commenter?.fullname || "Anonymous" %></div>
                  <div class="comment-date">
                    <i class="fas fa-clock me-1"></i>
                    <%= new Date(comment.createdAt).toLocaleDateString('en-US', { 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric',
                      hour: '2-digit',
                      minute: '2-digit'
                    }) %>
                  </div>
                </div>
              </div>
              <div class="comment-text"><%= comment.text %></div>
            </div>
          <% }) %>
        </div>
      <% } %>

      <!-- Comment Form -->
      <div class="comment-form fade-in stagger-3">
        <form method="POST" action="/hazard/<%= hazard._id %>/comments">
          <div class="mb-3">
            <label for="commentText" class="form-label">
              <i class="fas fa-pen me-2"></i>
              Share Your Thoughts
            </label>
            <textarea 
              name="commentText" 
              id="commentText"
              class="form-control" 
              rows="4" 
              placeholder="What do you think about this hazard? Share any additional information or concerns..."
              required
            ></textarea>
          </div>
          <div class="d-flex justify-content-end">
            <button type="submit" class="submit-btn">
              <i class="fas fa-paper-plane me-2"></i>
              Post Comment
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function closePage() {
      // Add closing animation
      document.body.style.transition = 'opacity 0.3s ease';
      document.body.style.opacity = '0';
      
      setTimeout(() => {
        // Try to go back in history first
        if (window.history.length > 1) {
          window.history.back();
        } else {
          // If no history, redirect to a default page
          window.location.href = '/hazards'; // Adjust this URL as needed
        }
      }, 300);
    }

    // Add smooth animations on load
    document.addEventListener('DOMContentLoaded', function() {
      // Auto-focus the comment textarea when user scrolls to it
      const commentTextarea = document.getElementById('commentText');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.focus();
            observer.unobserve(entry.target);
          }
        });
      }, { threshold: 0.5 });
      
      if (commentTextarea) {
        observer.observe(commentTextarea);
      }

      // Add character counter
      if (commentTextarea) {
        const maxLength = 500;
        const counter = document.createElement('small');
        counter.className = 'text-muted mt-1 d-block';
        counter.textContent = `0/${maxLength} characters`;
        commentTextarea.parentNode.appendChild(counter);

        commentTextarea.addEventListener('input', function() {
          const length = this.value.length;
          counter.textContent = `${length}/${maxLength} characters`;
          
          if (length > maxLength * 0.9) {
            counter.classList.add('text-warning');
          } else {
            counter.classList.remove('text-warning');
          }
        });
      }

      // Add ripple effect to submit button
      const submitBtn = document.querySelector('.submit-btn');
      if (submitBtn) {
        submitBtn.addEventListener('click', function(e) {
          const ripple = document.createElement('span');
          const rect = this.getBoundingClientRect();
          const size = Math.max(rect.width, rect.height);
          const x = e.clientX - rect.left - size / 2;
          const y = e.clientY - rect.top - size / 2;
          
          ripple.style.cssText = `
            position: absolute;
            width: ${size}px;
            height: ${size}px;
            left: ${x}px;
            top: ${y}px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: scale(0);
            animation: ripple 0.6s ease-out;
            pointer-events: none;
          `;
          
          this.appendChild(ripple);
          
          setTimeout(() => {
            ripple.remove();
          }, 600);
        });
      }
    });

    // Add ripple animation styles
    const style = document.createElement('style');
    style.textContent = `
      @keyframes ripple {
        to {
          transform: scale(2);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);

    // Keyboard shortcut to close (Escape key)
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closePage();
      }
    });
  </script>
</body>
</html>